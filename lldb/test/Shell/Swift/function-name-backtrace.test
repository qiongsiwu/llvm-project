# XFAIL: target-windows

# Test Swift function name printing in backtraces.

# RUN: split-file %s %t
# RUN: %target-swiftc -g %t/main.swift -o %t.out
# RUN: %lldb -x -b -s %t/commands.input %t.out -o exit 2>&1 \
# RUN:       | FileCheck %s

#--- main.swift
func foo() async -> Int {
  return await try! bar(a: 1, b: 1)
}

var res = {
    (index: Int) -> Int in
    return index + 10
}(1)

fileprivate func bar(a: Int, b: Int) async throws -> Int {
  var baz = Baz(baz: 1)
  return res + a + b + Foo.foo_(a: baz)
}

struct Foo {
  let foo: Int
  static func foo_<T>(a: T) -> Int {
    var a_ = a as! Baz
    return a_.qux(a: 1)
  }
}

struct Baz {
  var baz: Int
  mutating func qux<T>(a: T) -> Int {
    baz += 1
    return baz
  }
}

await foo()

#--- commands.input
b qux

run
bt

# CHECK: `Baz.qux<Int>(a=1)
# CHECK: `static Foo.foo_<main.Baz>(a=(baz = 1))
# CHECK: `bar(a=1, b=1)
# CHECK: `foo()