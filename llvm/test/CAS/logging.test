RUN: rm -rf %t
RUN: split-file %s %t
RUN: env LLVM_CAS_LOG=2 llvm-cas --cas %t/cas --ingest %t/input
RUN: env LLVM_CAS_LOG=2 llvm-cas --cas %t/cas --validate-if-needed -check-hash
RUN: env LLVM_CAS_LOG=2 llvm-cas --cas %t/cas --validate-if-needed -force -allow-recovery
RUN: FileCheck %s --input-file %t/cas/v1.log


// CHECK: resize mapped file '{{.*}}v9.index'
// CHECK: mmap '{{.*}}v9.index' [[INDEX:0x[0-9a-f]+]]
// CHECK: resize mapped file '{{.*}}v9.data'
// CHECK: mmap '{{.*}}v9.data' [[DATA:0x[0-9a-f]+]]
// CHECK: resize mapped file '{{.*}}v4.actions'
// CHECK: mmap '{{.*}}v4.actions' [[ACTIONS:0x[0-9a-f]+]]

// store input/a contents into the datapool
// CHECK: create record region=[[INDEX]] offset=[[INPUT_A_OFF:0x[0-9a-f]+]] hash=9b096cd140f119
// CHECK: cmpxcgh subtrie region=[[INDEX]] offset={{.*}} slot={{.*}} expected=0x0 new=[[INPUT_A_OFF]] prev=0x0
// CHECK: alloc [[DATA]]

// CHECK: resize mapped file '{{.*}}v4.actions'
// CHECK: close mmap '{{.*}}v4.actions'
// CHECK: resize mapped file '{{.*}}v9.data'
// CHECK: close mmap '{{.*}}v9.data'
// CHECK: resize mapped file '{{.*}}v9.index'
// CHECK: close mmap '{{.*}}v9.index'

// CHECK: validate-if-needed '{{.*}}cas' boot=[[BOOT:[0-9]+]] last-valid=0 check-hash=1 allow-recovery=0 force=0 llvm-cas={{.*}}llvm-cas
// CHECK: validate-if-needed '{{.*}}cas' boot=[[BOOT]] last-valid=[[BOOT]] check-hash=0 allow-recovery=1 force=1 llvm-cas={{.*}}llvm-cas

//--- input/a
Input 1

